name: CI/CD Docker Hub → EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME || 'default-cluster-name' }}
  DOCKER_IMAGE: pfalck/devopstest 

jobs:
  ci:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE:latest .
          docker push $DOCKER_IMAGE:latest  # Solo si quieres actualizar la imagen automáticamente

  cd:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy Docker Hub image to EKS
        run: |
          DEPLOYMENT_NAME=devops-app-deployment
          CONTAINER_NAME=devops-app-container
          IMAGE=$DOCKER_IMAGE:latest

          kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$IMAGE
          kubectl rollout status deployment/$DEPLOYMENT_NAME
