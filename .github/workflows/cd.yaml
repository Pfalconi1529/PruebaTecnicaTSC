# Define el nombre del flujo de trabajo
name: CD / Deployment to Kubernetes

# Se dispara despu√©s de un push exitoso a 'main'
on:
  push:
    branches:
      - main
      
# El job principal para el despliegue
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Define un entorno de despliegue (opcional pero buena pr√°ctica)
    environment: production 
    
    steps:
      - name: Checkout Code
        # Obtiene el c√≥digo, necesario para acceder a los manifiestos de Kubernetes
        uses: actions/checkout@v4

      # ====================================================================
      # üîë CR√çTICO: Configuraci√≥n de Acceso a Kubernetes
      # El secreto KUBE_CONFIG_DATA debe estar configurado en GitHub
      # ====================================================================
      - name: Set up Kubeconfig Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}
          
      - name: Deploy Kubernetes Manifests
        # Utiliza la acci√≥n de Kubernetes para aplicar los manifiestos YAML
        uses: azure/k8s-deploy@v4
        with:
          # üí° AJUSTE CLAVE: Apuntamos a todos los archivos YAML en la carpeta
          # El asterisco (*) procesar√° deployment.yaml, service.yaml, etc.
          manifests: kubernetes/*.yaml
          namespace: default 
          action: deploy # Esto ejecuta 'kubectl apply'
          
      - name: Verify Deployment Status
        # Verifica que el despliegue haya sido exitoso antes de terminar el workflow
        run: kubectl rollout status deployment/devops-api-deployment
